Про Vector в С++

• Vector поддерживает быстрый произвольный доступ к любому элементу по индексу, а также эффективное добавление и удаление элементов в конце массива. Для этого он использует динамическое выделение памяти и перераспределение, когда текущая емкость заполняется. Это делает vector удобным для хранения и обработки последовательных данных, таких как числа, символы или объекты.
• Vector может быть инициализирован разными способами, например, с помощью списка инициализации, диапазона итераторов, другого вектора или определенного размера и значения.
Например:
```
    vector<int> v1 = {1, 2, 3}; // инициализация с помощью списка
    vector<int> v2(v1.begin(), v1.end()); // инициализация с помощью диапазона
    vector<int> v3(v2); // инициализация с помощью копии
    vector<int> v4(5, 10); // инициализация с помощью размера и значения
```

• Vector имеет специальную реализацию для элементов типа bool, которая называется vector<bool> . Эта реализация оптимизирует использование памяти за счет хранения битов вместо байтов. Однако это также приводит к некоторым отличиям от обычного вектора, например, невозможности получить указатель на элемент или использовать алгоритмы стандартной библиотеки.